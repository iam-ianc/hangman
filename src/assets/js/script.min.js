$(document).ready(function() {
  function makeScreenGame(container, screen){
    $(container).css({ 'display':'flex' });

    let screenGame = $(container).find('.wrapper-game');

    if (screen === 'begin'){
      $(screenGame).addClass(screen);
      screenGame.html(`
        <div class="row">
        <div class="col-6 img-begin">
        <img src="assets/img/begin.svg" alt="Início" />
        </div><!-- /.col-6 -->
        <div class="col-6 col-12-sm txt-begin">
        <h2>Exercício de <b><i>Fixação</i></b></h2>
        <a href="#" class="wrapper-btn">
        <img class="ico" src="assets/img/ico-play.svg" />
        Começar
        </a><!-- /.wrapper-btn -->
        </div><!-- /.col-6 txt-begin -->
        </div><!-- /.row -->
      `)
      return true;
    } else if (screen === 'loser'){
      $(screenGame).addClass(screen);
      screenGame.html(`
        <h2 titleGame="">Você errou!</h2>
        <hr>
        <p messageGame="">Você não conseguiu descobrir a palavra deste mistério.</p>
        <a href="#" class="wrapper-btn"><i class="fas fa-redo-alt"></i>Refazer</a>
      `)
      return true;
    } else if (screen === 'winner'){
      $(screenGame).addClass(screen);
      screenGame.html(`
        <h2 titleGame="">Parabéns!</h2>
        <hr>
        <p messageGame="">Você descobriu a palavra deste mistério.</p>
        <a href="#" class="wrapper-btn"><i class="fas fa-redo-alt"></i>Refazer</a>
      `)
      return true;
    }
  }

  function makeDivsWords(arr){
    let resultDivs = ``;

    for (let i = 0; i < arr.length; i++){
      resultDivs += `<div class="wrapper-letters word-${i+1}">`;

      let partsWord = arr[i].split("");

      for (let j = 0; j < partsWord.length; j++){
        resultDivs += `<div class="letter"><span letter="${partsWord[j]}"></span></div><!-- /.letter -->`;
      }
      resultDivs += `</div><!-- /.wrapper-letters word-${i+1} -->`;
    }
    return resultDivs;
  }

  function searchLetterOnDisplay(method, arrWord, letter, count) {
    count = count;

    arrWord = arrWord.find('span');

    arrWord.each(function(index, elem) {
      let displayLetter = $(elem).attr('letter');

      if (method === 'show'){
        if (displayLetter === letter){
          $(elem).html(letter);
          count++;
        }
      } else if (method === 'hidden') {
        $(elem).html('');
      }
    });

    if (method === 'show') {
      return count;
    }
  }

  // Para cada Game:
  $('.bg-game').each(function(index, elem) {
    let name = $(this).attr('game');
    let keyboard = $(this).find('.keyboard');
    let displayWords = $(this).find('.fullWords');
    let life = 0;
    let countName = 0;

    // Boneco:
    let human = $(this).find('.parts-human');
    // Inicio - Game:
    let containerScreenGame = $(this).find('.loadingGame');

    // Tratamento da string:
    name = name.trim();
    name = name.toUpperCase();
    let nameWithoutSpace = name.replace(/\s{1,}/g, '');
    let nameLength = nameWithoutSpace.length;

    // Separar por nomes:
    let arrNames = name.split(" ");
    // Criação de Div para cada palavra/letra:
    let elementsHtml = makeDivsWords(arrNames);
    // Mostrar na tela os campos das letras:
    displayWords.html(elementsHtml);

    // Screen: Begin
    makeScreenGame(containerScreenGame, 'begin');
    // Remoção da palavra escolhida
    $(this).attr('game', '');

    containerScreenGame.find('a').on('click', function(e) {
      e.preventDefault();
      // END: Screen
      containerScreenGame.css({'display':'none'});
      containerScreenGame.find('.wrapper-game').removeClass('begin');
      containerScreenGame.find('.wrapper-game').html('');
      // Human:
      human.find('img').css({'display':'none'});
      // BTN:
      keyboard.find('.btnForGame').each(function(index, botao) {
        $(this).attr('check', '');
        $(this).attr('mode', 'true');
      });
      // WORDS:
      searchLetterOnDisplay('hidden', displayWords);
      // COUNT NAME / LIFE:
      countName = 0;
      life = 0;
    });

    // Pra cada Teclado:
    keyboard.each(function(index, elemnt){
      let btn = $(this).find('.btnForGame');

      // Pra cada Botão:
      btn.each(function(index2, elem2) {
        $(this).on('click', (e) => {
          e.preventDefault();
          let btnLetter = $(this).attr('letter');

          // Apenas se o botão estiver disponível para click:
          if ($(this).attr('mode') === 'true'){
            $(this).attr('mode', 'false');

            // Verificação da letra com a palavra:
            if (name.indexOf(btnLetter) !== -1){
              countName = searchLetterOnDisplay('show', displayWords, btnLetter, countName);
              $(this).attr('check', 'true');

              // SCREEN: WINNER
              if (countName === nameLength){
                setTimeout(function(){
                  makeScreenGame(containerScreenGame, 'winner');

                  // CLICK BTN SCREEN
                  containerScreenGame.find('a').on('click', function(e) {
                    e.preventDefault();

                    // END: Screen
                    containerScreenGame.css({'display':'none'});
                    containerScreenGame.find('.wrapper-game').removeClass('winner');
                    containerScreenGame.find('.wrapper-game').html('');
                    // Human:
                    human.find('img').css({'display':'none'});
                    // BTN:
                    keyboard.find('.btnForGame').each(function(index, botao) {
                      $(this).attr('check', '');
                      $(this).attr('mode', 'true');
                    });
                    // WORDS:
                    searchLetterOnDisplay('hidden', displayWords);
                    // COUNT NAME / LIFE:
                    countName = 0;
                    life = 0;
                  })
                }, 500);
              }// END IF: WINNER
            } else {
              $(this).attr('check', 'false');
              console.log(`Letra Errada: ${btnLetter}`);

              life = life + 1;

              // hangMan:
              $(human).children().each(function(index, elem) {
                let localMember = $(elem).attr('local');

                if (life === 1 && localMember === 'head'){
                  $(elem).css({ 'display':'block' });
                } else if (life === 2 && localMember === 'body'){
                  $(elem).css({ 'display':'block' });
                } else if (life === 3 && localMember === 'arm-left'){
                  $(elem).css({ 'display':'block' });
                } else if (life === 4 && localMember === 'arm-right'){
                  $(elem).css({ 'display':'block' });
                } else if (life === 5 && localMember === 'leg-left'){
                  $(elem).css({ 'display':'block' });
                } else if (life === 6 && localMember === 'leg-right'){
                  $(elem).css({ 'display':'block' });
                }
              });

              if (life === 6 ){
                setTimeout(function(){
                  makeScreenGame(containerScreenGame, 'loser');

                  // CLICK BTN SCREEN
                  containerScreenGame.find('a').on('click', function(e) {
                    e.preventDefault();
                    // END: Screen
                    containerScreenGame.css({'display':'none'});
                    containerScreenGame.find('.wrapper-game').removeClass('loser');
                    containerScreenGame.find('.wrapper-game').html('');
                    // Human:
                    human.find('img').css({'display':'none'});
                    // BTN:
                    keyboard.find('.btnForGame').each(function(index, botao) {
                      $(this).attr('check', '');
                      $(this).attr('mode', 'true');
                    })
                    // WORDS:
                    searchLetterOnDisplay('hidden', displayWords);
                    // COUNT NAME / LIFE:
                    countName = 0;
                    life = 0;
                  });
                }, 250);
              }// END IF: LIFE == 6
            }
          }// END IF: MODE == TRUE

        });// End Click BTN:
      });// End Each BTN:

    });// End Each Keyboad:

  })// End Each Game:
});
